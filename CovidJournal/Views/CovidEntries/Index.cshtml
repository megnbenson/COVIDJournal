@using System.Linq;
@using Microsoft.EntityFrameworkCore;
@using CovidJournal.Methods;
@using CovidJournal.Models;
@model IEnumerable<CovidJournal.Models.CovidEntry>



@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<div>
    @*@helper WelcomeMessage(string username)
        {
        <p>Welcome, @username.</p>
        }

        @WelcomeMessage("John Smith")*@

    <!--<p> with this data:</p>
    <p>-->
    @*@{var myChart = new Chart(width: 600, height: 400)
        .AddTitle("Chart Title")
        .AddSeries(
        name: "Employee",
        xValue: new[] { "Peter", "Andrew", "Julie", "Mary", "Dave" },
        yValues: new[] { "2", "6", "4", "5", "3" }) .Write(); }*@

    <!--</p>-->

    @*<p> A GRAPH HERE</p>*@

    @*----------------------Changes----------------------*@
    @*container for graph*@
    <div id="chartContainer" style="height: 370px; width: 100%;"></div>

    @*js library for graph*@
    <script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>

    @*script for filling container*@
    <script>
    window.onload = function () {

    var chart = new CanvasJS.Chart("chartContainer", {
	    theme: "light1", // "light1", "light2", "dark1", "dark2"
	    animationEnabled: true,
	    zoomEnabled: true,
	    title: {
		    text: "Temperature Graph"
	    },
	    data: [{
		    type: "line",
		    dataPoints: @Html.Raw(ViewBag.DataPoints)
	    },]
    });

    chart.render();
    }
    </script>

    @*----------------------Changes----------------------*@


</div>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Date)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Temperature)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Note)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Mood)
            </th>
            <th>
                Symptoms
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Date)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Temperature)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Note)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Mood)
                </td>
                <td>
                    @LinqSymptoms.SymptomsList(item)
                </td>

                <td>
                    <a asp-action="Edit" asp-route-id="@item.EntryId">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.EntryId">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.EntryId">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
